<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.avira.ds</groupId>
  <artifactId>sparser</artifactId>
  <version>0.1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <modules>
    <module>macros</module>
    <module>core</module>
  </modules>

  <name>sparser</name>
  <description>Scala/Spark Parser library allows abstracting input parsing
    logic into specialized classes usable both in standalone Scala projects or
    with Apache Spark.</description>
  <url>http://www.avira.com/</url>

  <scm>
    <connection>scm:git:git://github.dtc.avira.com/BigDataOperations/sparser.git</connection>
    <developerConnection>scm:git:git@github.dtc.avira.com:BigDataOperations/sparser.git</developerConnection>
    <url>https://github.dtc.avira.com/BigDataOperations/sparser</url>
  </scm>

  <organization>
    <name>Avira Operations GmbH</name>
    <url>http://www.avira.com/</url>
  </organization>

  <developers>
    <developer>
      <name>Calin-Andrei Burloiu</name>
      <email>calin.burloiu@avira.com</email>
      <organization>Avira Operations GmbH &amp; Co. KG</organization>
      <organizationUrl>http://www.avira.com</organizationUrl>
      <roles>
        <role>Team Leader</role>
      </roles>
    </developer>
    <developer>
      <name>Iulia Pasov</name>
      <email>iulia.pasov@avira.com</email>
      <organization>Avira Operations GmbH &amp; Co. KG</organization>
      <organizationUrl>http://www.avira.com</organizationUrl>
    </developer>
    <developer>
      <name>Viacheslav Rodionov</name>
      <email>viacheslav.rodionov@avira.com</email>
      <organization>Orange S.A.</organization>
      <organizationUrl>http://www.avira.com</organizationUrl>
    </developer>
  </developers>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <main.basedir>${project.basedir}</main.basedir>

    <java.version>1.7</java.version>
    <scala.base.version>2.10</scala.base.version>
    <scala.version>${scala.base.version}.4</scala.version>

    <cdh.version>-cdh5.4.2</cdh.version>

    <spark.version>1.3.0${cdh.version}</spark.version>
    <hadoop.version>2.6.0</hadoop.version>

    <play-json.version>2.4.2</play-json.version>

    <scala-logging.version>2.1.2</scala-logging.version>
    <slf4j.version>1.7.12</slf4j.version>

    <scalatest.version>2.2.4</scalatest.version>

    <scalastyle.version>0.7.0</scalastyle.version>
  </properties>

  <dependencies>
    <!-- Testing -->
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.base.version}</artifactId>
      <version>${scalatest.version}</version>
      <scope>test</scope>
    </dependency>

    <!--<dependency>-->
      <!--<groupId>org.scala-lang</groupId>-->
      <!--<artifactId>scala-library</artifactId>-->
      <!--<version>${scala.version}</version>-->
      <!--<scope>provided</scope>-->
    <!--</dependency>-->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-compiler</artifactId>
      <version>${scala.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>cloudera</id>
      <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
    </repository>

    <repository>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
      <id>bdo</id>
      <name>Data Science Maven Repository</name>
      <layout>default</layout>
      <url>http://hadoop-mgmt-01.srv.doi1.avira.org:8081/nexus/content/repositories/releases/</url>
    </repository>
    <repository>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </snapshots>
      <id>bdo-snapshots</id>
      <name>Data Science Maven Snapshots Repository</name>
      <layout>default</layout>
      <url>http://hadoop-mgmt-01.srv.doi1.avira.org:8081/nexus/content/repositories/snapshots/</url>
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <id>deployment</id>
      <name>Internal Releases</name>
      <url>http://hadoop-mgmt-01.srv.doi1.avira.org:8081/nexus/content/repositories/releases</url>
    </repository>
    <snapshotRepository>
      <id>deployment</id>
      <name>Internal Releases</name>
      <url>http://hadoop-mgmt-01.srv.doi1.avira.org:8081/nexus/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.2.2</version>

        <configuration>
          <recompileMode>incremental</recompileMode>
          <useZincServer>true</useZincServer>
        </configuration>

        <executions>
          <execution>
            <id>scala-compile-first</id>
            <phase>process-resources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>scala-test-compile-first</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>

        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>

        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- disable surefire -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
      <!-- enable scalatest -->
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>1.0</version>
        <configuration>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
          <junitxml>.</junitxml>
          <filereports>WDF TestSuite.txt</filereports>
        </configuration>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.scalastyle</groupId>
        <artifactId>scalastyle-maven-plugin</artifactId>
        <version>${scalastyle.version}</version>
        <configuration>
          <verbose>false</verbose>
          <failOnViolation>true</failOnViolation>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
          <failOnWarning>false</failOnWarning>
          <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
          <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
          <configLocation>scalastyle-config.xml</configLocation>
          <outputFile>${basedir}/target/scalastyle-output.xml</outputFile>
          <outputEncoding>UTF-8</outputEncoding>
        </configuration>
        <executions>
          <execution>
            <phase>process-sources</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
